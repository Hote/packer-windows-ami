{
  "variables": {
    "admin_password": "",
    "base_ami_id": ""
  },

  "builders": [
    {
      "type": "amazon-ebs",
      "region": "ap-southeast-2",
      "source_ami": "{{user `base_ami_id`}}",
      "instance_type": "t2.micro",
      "communicator": "winrm",
      "winrm_username": "Administrator",
      "ami_name": "WindowsAMI-{{isotime \"2006-01-02\"}}",
      "user_data_file": "template/setup_winrm.txt",
      "ami_block_device_mappings": [ {
            "device_name": "/dev/sda1",
            "volume_type": "gp2",
            "volume_size": 64,
            "delete_on_termination": true
        } ],
        "launch_block_device_mappings": [ {
            "device_name": "/dev/sda1",
            "volume_type": "gp2",
            "volume_size": 64,
            "delete_on_termination": true
        } ]
    }
  ],

  "provisioners" : [
    {
      "type": "file",
      "source": "template/install_programs.ps1",
      "destination": "C:\\Users\\Administrator\\install_programs.ps1"
    },
    {
      "type": "file",
      "source": "template/softwareToInstall.json",
      "destination": "C:\\Users\\Administrator\\softwareToInstall.json"
    },
    {
      "type": "powershell",
      "inline": ["Powershell -NonInteractive -File \"C:\\Users\\Administrator\\install_programs.ps1\" -json \"C:\\Users\\Administrator\\softwareToInstall.json\""]
    },
    {
      "type": "windows-shell",
      "inline": ["tzutil /s \"AUS Eastern Standard Time\""]
    },
    {
       "type": "windows-restart",
       "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
       "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-shell",
      "inline": ["@powershell -NoProfile -ExecutionPolicy Bypass -Command \"$user=[ADSI]'WinNT://localhost/Administrator'; $user.SetPassword('{{user `admin_password`}}')"]
    }
  ]
}
